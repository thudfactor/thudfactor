---
import type { CollectionEntry } from "astro:content";
import EleventyFetch from "@11ty/eleventy-fetch";
const { title, published, genres, openlibrary } = Astro.props.book.data;

interface Props {
	book: CollectionEntry<"books">;
}

const apibase = "https://openlibrary.org/";

const fetchConfig = {
	duration: "365d",
	type: "json",
	verbose: true,
	directory: ".cache/openlibrary",
	fetchOptions: {
		headers: {
			"User-Agent": "Thudfactor-Books (john@thudfactor.com)",
		},
	},
};

const getJSON = async (path: string, duration: string = "365d") => {
	const url = new URL(path, apibase);
	const config = { ...fetchConfig, duration };
	const resp = await EleventyFetch(url.toString(), config);
	return resp;
};

const url = `/books/${openlibrary}.json`;

const bookData = await getJSON(url);
const { authors, covers } = bookData;
let authorDeets = [];
for (let i = 0; i < authors.length; i++) {
	const thisAuthor = await getJSON(`${authors[i].author.key}.json`);
	if (thisAuthor.name) {
		authorDeets.push(thisAuthor.name);
	}
}
---

<article class="book">
	{
		covers?.length > 0 && (
			<img
				src={`https://covers.openlibrary.org/b/id/${covers[0]}-M.jpg`}
				alt="Book cover from Open Library"
			/>
		)
	}
	<header>
		<h2>
			{title} ({published})
		</h2>
		<div>By: {authorDeets.join(", ")}, Genres: {genres.join(", ")}</div>
	</header>
	<section set:html={Astro.props.book.rendered?.html} />
</article>
