:root {
	font-family: var(--font-sans);
	letter-spacing: 0.02ch;
}

:is(ul, ol, dl, p):not([class]) {
	font-size: var(--text-base);
}

:is(h1, h2, h3, h4, h5, h6):not([class]) {
	font-family: var(--font-serif);
	font-weight: 400;
	hyphens: auto;
}

h1:not([class]) {
	font-size: var(--text-4xl);
}

h2:not([class]) {
	font-size: var(--text-3xl);
}

h3:not([class]) {
	font-size: var(--text-2xl);
}

h4:not([class]),
h5:not([class]),
h6:not([class]) {
	font-size: var(--text-xl);
}

img:not([class]) {
	height: auto;
}

a:not([class]) {
	transition-property: color, text-decoration-color;
	transition-duration: 0.3s;
	text-decoration: underline;
	text-decoration-color: var(--color-indigo-400);
	text-decoration-thickness: from-font;
	outline-offset: var(--spacing-3xs);
}

a:not([class]):is(:link, :visited) {
	color: inherit;
	/* color: var(--color-blue-700); */
}

a:not([class]):is(:hover) {
	color: var(--color-fuchsia-700);
}

/* Set default svg size so it behaves more like icons */
svg:not([class]):not([role="img"]) {
	width: auto;
	height: 1lh;
}

/* These should be monospaced and also need to be adjusted down a bit because
monospace fonts typically look larger */
code,
kbd,
samp,
var {
	font-family: var(--font-mono);
	font-size: 0.9em;
	background-color: var(--color-stone-200);
}

del {
	text-decoration-color: var(--color-red-700);
}

ins {
	text-decoration-style: wavy;
	text-decoration-color: var(--color-green-700);
}

cite {
	font-style: italic;
}

blockquote {
	margin-inline-start: var(--spacing-lg);
	padding-inline-start: var(--spacing-s);
	border-inline-start: 1px var(--color-stone-200) solid;
	border-inline-start-width: var(--spacing-3xs);
}

blockquote > q {
	font-size: var(--text-base);
}

blockquote footer {
	text-align: right;
	font-style: italic;

	&:before {
		content: "â€” ";
	}

	:is(cite, i, em) {
		font-style: normal;
	}
}

table {
	min-width: 40ch;
}

table thead {
	border-bottom: 3px currentColor double;
	background-color: var(--color-stone-200);
}

table caption {
	font-style: italic;
	background-color: var(--color-stone-200);
}

:is(th, td, caption) {
	padding-block: var(--spacing-3xs);
	padding-inline: var(--spacing-3xs);
	&:first-child {
		padding-inline-start: 0;
	}
}

tbody tr:has(:hover) {
	background-color: var(--color-slate-200);
}

tbody tr:nth-child(even) {
	background-color: var(--color-stone-200);
	&:has(:hover) {
		background-color: var(--color-slate-200);
	}
}

tr + tr {
	border-top: 1px var(--color-stone-300) solid;
}

tbody th:first-child {
	text-align: right;
	border-right: 1px #ccc solid;
}

details {
	border: 1px #ccc solid;
}

summary {
	font-size: var(--text-lg);
	background-color: var(--color-stone-700);
	color: var(--color-stone-100);
	padding-inline: var(--spacing-xs);
}

details > :not(summary) {
	margin-block: var(--spacing-xs);
	margin-inline: var(--spacing-xs);
}

figure:not([class]) {
	margin-inline: 0;
}

figure {
	position: relative;
}

figure.flow cite {
	position: absolute;
	top: 0;
	right: 0;
	background-color: var(--color-stone-800);
	color: var(--color-stone-100);
	padding-inline: var(--spacing-3xs);
	margin-block-start: 0;
}

figure.flow figcaption {
	background-color: var(--color-stone-800);
	color: var(--color-stone-100);
	padding-inline: var(--spacing-s);
	padding-block: var(--spacing-xs);
	margin-block-start: 0;
}

figcaption:empty {
	display: none;
}

figcaption p {
	max-inline-size: none !important;
}

aside {
	max-inline-size: 40ch;
}

aside q:before,
aside q:after {
	content: "";
}

dt:not([class]):not(:first-child) {
	margin-top: var(--spacing-2xs);
}

@container (min-width: 600px) {
	[data-position] {
		max-inline-size: 38%;
		min-width: 19rem;
	}

	[data-position="right"] {
		float: right;
		clear: right;
		margin-inline-start: var(--spacing-m);
	}

	[data-position="left"] {
		float: left;
		clear: left;
		margin-inline-end: var(--spacing-m);
	}
}
