<style>
  form {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
  }
</style>
<script>
  const themeForm = document.getElementById('theme-selector');
  // On page load, set the font style from local storage
  // Right now this default value has to be manually kept in sync with the
  // default value in the global.css.
  document.addEventListener('DOMContentLoaded', () => {
    const baseDataset = document.documentElement.dataset;
    let selectedTheme = localStorage.getItem('theme');

    // If no theme is set, we will use the system preferences
    if (selectedTheme === null) {
      const highConstrastMode = window.matchMedia('(prefers-contrast: more)').matches;
      const darkMode = window.matchMedia('(prefers-color-scheme: dark)').matches;
      if (highConstrastMode) {
        selectedTheme = darkMode ? 'high-contrast-dark' : 'high-contrast-light';
      } else {
        selectedTheme = darkMode ? 'dark' : '';
      }
    }

    // If a theme is set, we will use that
    baseDataset.theme = selectedTheme;

    // Set the selected option in the form
    const targetOption = themeForm?.querySelector(`option[value="${selectedTheme}"]`) as HTMLOptionElement;
    if (targetOption) {
      targetOption.selected = true;
    }
  });

  // On submit, change the font style by setting font-family style
  themeForm?.addEventListener('submit', (event) => {
    event.preventDefault();
    const selectedTheme = themeForm.querySelector('select')?.value || '';
    document.documentElement.dataset.theme = selectedTheme;
    localStorage.setItem('theme', selectedTheme);
  });
</script>
<form id="theme-selector">
<label>Color Theme:
<select>
  <option value="">Default</option>
  <option value="dark">Dark</option>
  <option value="high-contrast-light">High Contrast (Light)</option>
  <option value="high-contrast-dark">High Contrast (Dark)</option>
</select>
</label>
<button>Change</button>
</form>